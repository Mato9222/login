package com.teamtodev.sanction.vo;

import java.io.Serializable;
import java.time.LocalDate;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;

import org.springframework.web.multipart.MultipartFile;

import com.teamtodev.attachfile.vo.AttachVO;
import com.teamtodev.common.vo.CommonVO;
import com.teamtodev.documents.vo.DocumentFormVO;
import com.teamtodev.employees.vo.EmployeeVO;

import lombok.Data;
import lombok.EqualsAndHashCode;

@Data
@EqualsAndHashCode(of = "sanctnDocNo")
public class SanctionDocVO implements Serializable{
    private static final long serialVersionUID = 1L;
    
	private String sanctnDocNo;
	private int drafterEmplNo;
	private String docRaisngNo;
	private String sanctnSj;
	private String sanctnCn;
	private LocalDate recomDe;
	private LocalDate lastSanctnDe;
	private String lastSanctnSttusCode;
	private String lastSanctnSttusNm;
	private String tmprStreAt;
	private String dcrbUseAt;
	private Integer lastRcver;
	private String doorSign;
	private String sanctnLineNo;
	
	private List<DocumentFormVO> docFormList;
	private CommonVO commVo;
	private EmployeeVO emplVo;
	private int atchSize; // 첨부파일 개수 조회시 사용
	private MultipartFile[] boFiles;
	private List<AttachVO> atchList;
	
	/**
	 * 업로드된 첨부파일을 adapter 인 AttatchVO 로 wrapping
	 */
	public void setBoFiles(MultipartFile[] scFiles) {
		this.atchList = Optional.ofNullable(scFiles).map(
				sfs -> Arrays.stream(sfs).filter(sf -> !sf.isEmpty()).map(AttachVO::new).collect(Collectors.toList()))
				.orElse(Collections.emptyList());
	}
}

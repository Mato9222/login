package com.teamtodev.project.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.security.core.Authentication;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.teamtodev.common.mapper.CommonMapper;
import com.teamtodev.common.vo.CommonVO;
import com.teamtodev.employees.vo.EmployeeVO;
import com.teamtodev.employees.vo.EmployeeVOWrapper;
import com.teamtodev.project.service.ProjectMemberService;
import com.teamtodev.project.service.ProjectService;
import com.teamtodev.project.vo.ProjectMemberVO;
import com.teamtodev.project.vo.ProjectVO;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
@RequestMapping("/project")
public class ProjectController {
	
	@Autowired
	private CommonMapper mapper;
	
	@Autowired
	private ProjectService Pservice;
	
	@Autowired
	private ProjectMemberService PMservice; 
	
	@GetMapping("/projectList")
	public String selectProjectList(Model model, Authentication auth) {
		List<ProjectVO> proList = Pservice.retrieveProjectList();
		log.info("proList:{}",proList);
		model.addAttribute("proList",proList);
	    EmployeeVOWrapper userWrapper = (EmployeeVOWrapper) auth.getPrincipal();
	    EmployeeVO user = userWrapper.getRealUser();
	    List<ProjectVO> myProList = Pservice.retrieveMyProject(user.getEmplNo());
	    model.addAttribute("myProList",myProList);
		return "project/projectlist";
	}
	
	@GetMapping(value="/detailProject/{prjctCode}")
	public String selectProject(@PathVariable String prjctCode, Model model) {
		List<ProjectVO> detailList = Pservice.retrieveDetailProject(prjctCode);
		log.info("detailList:{}",detailList);
		model.addAttribute("detailList",detailList);
		
		return "project/projectdetail";
	}
	
	@GetMapping("/viewProjectForm")
	public String viewProjectForm(Model model) {
		List<CommonVO> ccList = mapper.selectCommonList("프로젝트역할");
		model.addAttribute("ccList",ccList);
		return "project/projectinsertform";
	}
	
	@PostMapping(value="/insertProject",produces = MediaType.APPLICATION_JSON_VALUE)
	@ResponseBody
	public String insertProject(@RequestBody ProjectVO pjVO) {
		log.info("sebi===>{}",pjVO);
		ProjectVO newPjVo = new ProjectVO();
		newPjVo.setPrjctNm(pjVO.getPrjctNm());
		newPjVo.setPrjctDc(pjVO.getPrjctDc());
		newPjVo.setPrjctBgnde(pjVO.getPrjctBgnde());
		newPjVo.setPrjctClosOn(pjVO.getPrjctClosOn());
		Pservice.createProject(newPjVo);
		
		
		List<ProjectMemberVO> pmList = pjVO.getPjMemberVO();
		String prjctCode = newPjVo.getPrjctCode();
		
		ProjectMemberVO newPmVo = new ProjectMemberVO();
		
		for (ProjectMemberVO pmVo : pmList) {
			int emplNo = pmVo.getEmplNo();
			String prjctRoleCode = pmVo.getPrjctRoleCode();
			newPmVo.setEmplNo(emplNo);
			newPmVo.setPrjctCode(prjctCode);
			newPmVo.setPrjctRoleCode(prjctRoleCode);
			PMservice.createProjectMember(newPmVo);
		}
		
		return "ok";
	}
}
